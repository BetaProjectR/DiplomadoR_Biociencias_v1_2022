# Importa base de datos
age <- read_excel("age.aspa.xlsx")
# Habilitar librerías
library(readxl)
# Importa base de datos
age <- read_excel("age.aspa.xlsx")
setwd("~/Dropbox/CURSOS/VINCULACION/DiplomadoR_Biociencias_v1_2022/Clase_15")
# Importa base de datos
age <- read_excel("age.aspa.xlsx")
View(age)
# Habilitar librerías
library(readxl)
age.aspa <- read_excel("age.aspa.xlsx")
head(age.aspa)
# Formato formula para considerar en el gráfico
formula1 <- y ~ x
My_Theme = theme(
axis.title.x = element_text(size = 20),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.y = element_text(size = 20))
q <- age.aspa %>% ggplot(aes(x = ASPA, y = Age)) +
geom_point() +
stat_smooth(method = "lm", col = "blue", show.legend=TRUE) + scale_x_continuous(n.breaks = 8)
library(dplyr)
My_Theme = theme(
axis.title.x = element_text(size = 20),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.y = element_text(size = 20))
library(ggplot2)
library(car)
My_Theme = theme(
axis.title.x = element_text(size = 20),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.y = element_text(size = 20))
q <- age.aspa %>% ggplot(aes(x = ASPA, y = Age)) +
geom_point() +
stat_smooth(method = "lm", col = "blue", show.legend=TRUE) + scale_x_continuous(n.breaks = 8)
q+My_Theme+ggtitle("Relación edad - % metilación gen ASPA.")
# Ajusta el modelo de regresió lineal simple
reg <- lm(Age ~ ASPA, data = age.aspa)
# Da el resumen del modelo ajustado
summary(reg)
summary(reg$residuals) # Información de los residuos
summary(reg)$sigma  # Desviación estandar residual
summary(reg)$r.squared # Coeficiente de determinación (R cuadrado)
summary(reg)$adj.r.squared # R cuadrado ajustado
anova(reg)
predict.lm(reg,
newdata=data.frame(ASPA=c(0.25,0.50,0.75)),
interval="confidence")
# Modelo de regresión lineal simple
reg <- lm(Age ~ ASPA, data = age.aspa)
plot(reg$residuals, pch=20, col = "blue")
# Realiza la prueba de Durbin Watson
DW_1 <- dwtest(Age ~ ASPA, data = age.aspa,
alternative = c("two.sided"), iterations = 15)
library(ggpmisc)
# Realiza la prueba de Durbin Watson
DW_1 <- dwtest(Age ~ ASPA, data = age.aspa,
alternative = c("two.sided"), iterations = 15)
library(lmtest)
# Realiza la prueba de Durbin Watson
DW_1 <- dwtest(Age ~ ASPA, data = age.aspa,
alternative = c("two.sided"), iterations = 15)
# Muestra los resultados de la prueba en formato tabla
pander::pander((DW_1), caption = "Durbin Watson test")
q+My_Theme+ggtitle("Relación edad - % metilación gen ASPA.")
plot(reg, which=3)
# Realiza la prueba de Levene
help(leveneTest)
leveneTest(Age ~ ASPA, data = age.aspa,
center = "median")
# Realiza la prueba de Breusch-Pagan
bp_test <- bptest(reg)
# Muestra los resultados de la prueba en formato tabla
pander::pander((bp_test), caption = "Breusch-Pagan test")
# Realiza el gráfico de cuantiles (QQ plot)
qqPlot(reg) # library(car)
# Extrae los residuos del modelo de regresión lineal simple
lm_residuals <- residuals(object = reg)
# Realiza la prueba de Shapiro
shaptest_1 <- shapiro.test(x= lm_residuals)
# Muestra los resultados de la prueba en formato tabla
pander::pander((shaptest_1), caption = "Shapiro test")
# VALORES ATÍPICOS
plot(reg, which=4)
