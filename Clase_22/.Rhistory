h <- h %>% add_column(MADRE = NA)
h <- h %>% add_column(Sexo = 2)
ped5 <- bind_rows(m, h)
ped5 %>% distinct(ANIMAL, .keep_all = TRUE)
ped_ly10_kinship_130622 <- bind_rows(ped5, ped4,ped3,ped2, ped1, ped)
head(ped_ly10_kinship_130622)
tail(ped_ly10_kinship_130622)
nrow(ped_ly10_kinship_130622)
tidy_ped <- tidyped(ped_ly10_kinship_130622)
visped(tidy_ped,compact = TRUE, outline=TRUE, showgraph=TRUE, file="ped_ly10_kinship_130622.pdf")
PED <- ped_ly10_kinship_130622
ped<-pedigree(id=PED$ANIMAL, dadid=PED$PADRE, momid=PED$MADRE, sex=PED$Sexo)
kin1 <- kinship(ped)  # calcula coeficiente de coascendencia entre pares de animales
View(kin1)
rm(list=ls())
library(readxl)
library(xlsx)
library(tidyverse)
library(kinship2)
library(devtools)
install_github("luansheng/visPedigree")
library(visPedigree)
ped_ly19 <- read.csv("~/Dropbox/DATA/PMG/BD/GEN/LYL2YC07_10_13_16_19/CRUZAMIENTOS/2022/ped_ly19.txt")
ped_ly19 <- mutate_if(ped_ly19, is.character, toupper)
Hembras <- read_excel("LY19cruza4_200622.xlsx", sheet = "Cruzas", col_types = c("numeric", "numeric", "date", "text", "text", "numeric", "numeric", "numeric","numeric", "numeric"))
Hembras <- read_excel("LY19cruza4_200622.xlsx", sheet = "Cruzas", col_types = c("numeric", "numeric", "date", "text", "text", "numeric", "numeric", "numeric","numeric", "numeric"))
Hembras <- read_excel("LY19cruza4_200622.xlsx", sheet = "Cruzas", col_types = c("numeric", "numeric", "date", "text", "text", "numeric", "numeric", "numeric","numeric", "numeric"))
Machos <- read_excel("LY19cruza4_200622.xlsx", sheet = "Machos Stock", col_types = c("numeric","numeric", "text", "date", "text", "text", "text", "text"))
Hembras <- read_excel("LY19cruza4_200622.xlsx", sheet = "Cruzas", col_types = c("numeric", "numeric", "date", "text", "text", "numeric", "numeric", "numeric","numeric", "numeric"))
Machos <- read_excel("LY19cruza4_200622.xlsx", sheet = "Machos Stock", col_types = c("numeric","numeric", "text", "date", "text", "text", "text", "text"))
ped_ly19 <- read.csv("~/Dropbox/DATA/PMG/BD/GEN/LYL2YC07_10_13_16_19/CRUZAMIENTOS/2022/ped_ly19.txt")
ped_ly19 <- mutate_if(ped_ly19, is.character, toupper)
Hembras <- read_excel("LY19cruza4_200622.xlsx", sheet = "Cruzas", col_types = c("numeric", "numeric", "date", "text", "text", "numeric", "numeric", "numeric","numeric", "numeric"))
Hembras <- read_excel("LY19cruza4_200622.xlsx", sheet = "Cruzas", col_types = c("numeric", "numeric", "date", "text", "text", "numeric", "numeric", "numeric","numeric", "numeric"))
Machos <- read_excel("LY19cruza4_200622.xlsx", sheet = "Machos Stock", col_types = c("numeric","numeric", "text", "date", "text", "text", "text", "text"))
View(Machos)
View(Hembras)
View(Machos)
animal_m <- Machos$`ANIMAL Macho`
animal_h <- Hembras$`ANIMAL Hembra`
m <- ped_ly19 %>% filter(ANIMAL %in% animal_m) %>% mutate(Sexo=1)
h <- ped_ly19 %>% filter(ANIMAL %in% animal_h) %>% mutate(Sexo=2)
ped <- bind_rows(m, h)
animal_m <- ped$PADRE
animal_h <- ped$MADRE
m <- ped_ly19 %>% filter(ANIMAL %in% animal_m) %>% mutate(Sexo=1)
h <- ped_ly19 %>% filter(ANIMAL %in% animal_h) %>% mutate(Sexo=2)
ped1 <- bind_rows(m, h)
animal_m <- ped1$PADRE
animal_h <- ped1$MADRE
m <- ped_ly19 %>% filter(ANIMAL %in% animal_m) %>% mutate(Sexo=1)
h <- ped_ly19 %>% filter(ANIMAL %in% animal_h) %>% mutate(Sexo=2)
m1 <- as.data.frame(c("2011_00069A81E9","2011_0006D2A90C","2011_0006D6F662","2011_0006EE4982","2011_0006D6A277","2012_00066E3659","2012_0006F03C82","2012_0006F3E567"))
colnames(m1) <- "ANIMAL"
m1 <- m1 %>% add_column(PADRE = NA)
m1 <- m1 %>% add_column(MADRE = NA)
m1 <- m1 %>% add_column(Sexo = 1)
ped2 <- bind_rows(m, m1, h)
ped2 %>% distinct(ANIMAL, .keep_all = TRUE)
animal_m <- ped2$PADRE
animal_h <- ped2$MADRE
m <- ped_ly19 %>% filter(ANIMAL %in% animal_m) %>% mutate(Sexo=1)
h <- ped_ly19 %>% filter(ANIMAL %in% animal_h) %>% mutate(Sexo=2)
ped3 <- bind_rows(m, h)
ped3 %>% distinct(ANIMAL, .keep_all = TRUE)
animal_m <- ped3$PADRE
animal_h <- ped3$MADRE
m <- ped_ly19 %>% filter(ANIMAL %in% animal_m) %>% mutate(Sexo=1)
h <- ped_ly19 %>% filter(ANIMAL %in% animal_h) %>% mutate(Sexo=2)
ped4 <- bind_rows(m, h)
ped4 %>% distinct(ANIMAL, .keep_all = TRUE)
animal_m <- ped4$PADRE
animal_h <- ped4$MADRE
m <- ped_ly19 %>% filter(ANIMAL %in% animal_m) %>% mutate(Sexo=1)
h <- ped_ly19 %>% filter(ANIMAL %in% animal_h) %>% mutate(Sexo=2)
m <- as.data.frame(animal_m)
colnames(m) <- "ANIMAL"
m <- m %>% distinct(ANIMAL, .keep_all = TRUE)
m <- m %>% add_column(PADRE = NA)
m <- m %>% add_column(MADRE = NA)
m <- m %>% add_column(Sexo = 1)
h <- as.data.frame(animal_h)
colnames(h) <- "ANIMAL"
h <- h %>% distinct(ANIMAL, .keep_all = TRUE)
h <- h %>% add_column(PADRE = NA)
h <- h %>% add_column(MADRE = NA)
h <- h %>% add_column(Sexo = 2)
ped5 <- bind_rows(m, h)
ped5 %>% distinct(ANIMAL, .keep_all = TRUE)
ped_ly10_kinship_200622 <- bind_rows(ped5, ped4,ped3,ped2, ped1, ped)
head(ped_ly10_kinship_200622)
tail(ped_ly10_kinship_200622)
nrow(ped_ly10_kinship_200622)
tidy_ped <- tidyped(ped_ly10_kinship_200622)
visped(tidy_ped,compact = TRUE, outline=TRUE, showgraph=TRUE, file="ped_ly10_kinship_200622_1.pdf")
PED <- ped_ly10_kinship_200622
ped<-pedigree(id=PED$ANIMAL, dadid=PED$PADRE, momid=PED$MADRE, sex=PED$Sexo)
kin1 <- kinship(ped)  # calcula coeficiente de coascendencia entre pares de animales
head(kin1)[c(1:5),c(714:717)]
# write.xlsx(kin1, file = "ped_ly10_kinship_200622.xlsx", sheetName = "Kinship", append = FALSE)
kin1_df <- as.data.frame(kin1)
kin1_df <- cbind(rownames(kin1), kin1_df)
write_excel_csv(kin1_df, file = "ped_ly10_kinship_200622_1.csv", col_names=TRUE)
knitr::include_graphics("slidy_2.JPG")
# Puedes instalar librerias con el comando library().
library(knitr)
knitr::include_graphics("slidy.JPG")
knitr::include_graphics("publicar.JPG")
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(ggplot2)
library(dplyr)
library(tidyr)
library(lmtest)
library(knitr)
library(nlme)
library(lsmeans)
library(coefplot)
library(corrplot)
library(lme4)
library(ggpubr)
library(rstatix)
library(PerformanceAnalytics)
q <- ggplot(color, aes(x = Peso, y = `Pig total`, shape=Cepa, color=Cepa))
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(ggplot2)
library(dplyr)
library(tidyr)
library(lmtest)
library(knitr)
library(nlme)
library(lsmeans)
library(coefplot)
library(corrplot)
library(lme4)
library(ggpubr)
library(rstatix)
library(PerformanceAnalytics)
pheno <- read_excel("BD_Monitoreo_Color_2021.xlsx")
# Transform to factors
pheno$Centro <-as.factor(pheno$Centro)
pheno$Especie <-as.factor(pheno$Especie)
pheno$Cepa <-as.factor(pheno$Cepa)
summary(pheno)
color <-  pheno %>% filter(Centro %in% c("Garrao", "Punta Islotes"))
table(color$Centro, color$Cepa)
table(color$Sexo, color$Cepa)
table(color$Muestreo, color$Cepa)
table(color$`Ax alim`, color$Cepa)
table(color$`Ax alim`, color$Muestreo)
color %>%
ggplot(aes(x= `Pig total`)) +
geom_histogram(col="darkblue", fill= "lightblue", position = "identity", bins = 10, alpha = 0.4 )+ labs(x="Pigmentación total", title = "Pigmentación total muestreo 1 y 2: LCY + AQG.")
color %>%
ggplot(aes(x= Entero)) +
geom_histogram(col="darkblue", fill= "lightblue", position = "identity", bins = 10, alpha = 0.4 )+ labs(x="Pigmentación total", title = "Color filete entero muestreo 1 y 2: LCY + AQG.")
color  %>% ggplot(aes(x=Cepa, y= `Pig total`))+
geom_boxplot(color="darkblue", fill="lightblue")
color  %>% ggplot(aes(x=Cepa, y= Entero))+
geom_boxplot(color="darkblue", fill="lightblue")
par(mfrow = c(1, 1))
color_cor <- color[, c(22:26)]
res <- cor(color_cor, use="complete.obs", method = c("spearman"))
round(res, 2)
chart.Correlation(color_cor, histogram=FALSE, pch=19, method = c("spearman"))
color <- as.data.frame(color)
lm0 <-lm(`Pig total` ~ Centro + Cepa + Sexo + Jaula + Peso, data=color)
anova(lm0)
q <- ggplot(color, aes(x = Peso, y = `Pig total`, shape=Cepa, color=Cepa))
q + geom_point() + xlab("Peso") + geom_smooth(method=lm) + facet_wrap(Sexo)
color %>%
ggplot(aes(x= `Pig total`)) +
geom_histogram(col="darkblue", fill= "lightblue", position = "identity", bins = 10, alpha = 0.4 )+ labs(x="Pigmentación total", title = "Pigmentación total muestreo 1 y 2: LCY + AQG.")
color %>%
ggplot(aes(x= Entero)) +
geom_histogram(col="darkblue", fill= "lightblue", position = "identity", bins = 10, alpha = 0.4 )+ labs(x="Pigmentación total", title = "Color filete entero muestreo 1 y 2: LCY + AQG.")
color  %>% ggplot(aes(x=Cepa, y= `Pig total`))+
geom_boxplot(color="darkblue", fill="lightblue")
color  %>% ggplot(aes(x=Cepa, y= Entero))+
geom_boxplot(color="darkblue", fill="lightblue")+facet_wrap(Sexo)
color %>%
ggplot(aes(x= `Pig total`)) +
geom_histogram(col="darkblue", fill= "lightblue", position = "identity", bins = 10, alpha = 0.4 )+ labs(x="Pigmentación total", title = "Pigmentación total muestreo 1 y 2: LCY + AQG.")
color %>%
ggplot(aes(x= Entero)) +
geom_histogram(col="darkblue", fill= "lightblue", position = "identity", bins = 10, alpha = 0.4 )+ labs(x="Pigmentación total", title = "Color filete entero muestreo 1 y 2: LCY + AQG.")
color  %>% ggplot(aes(x=Cepa, y= `Pig total`))+
geom_boxplot(color="darkblue", fill="lightblue")
color  %>% ggplot(aes(x=Cepa, y= Entero))+
geom_boxplot(color="darkblue", fill="lightblue")+facet_wrap(~Sexo)
color %>%
ggplot(aes(x= `Pig total`)) +
geom_histogram(col="darkblue", fill= "lightblue", position = "identity", bins = 10, alpha = 0.4 )+ labs(x="Pigmentación total", title = "Pigmentación total muestreo 1 y 2: LCY + AQG.")
color %>%
ggplot(aes(x= Entero)) +
geom_histogram(col="darkblue", fill= "lightblue", position = "identity", bins = 10, alpha = 0.4 )+ labs(x="Pigmentación total", title = "Color filete entero muestreo 1 y 2: LCY + AQG.")
color  %>% ggplot(aes(x=Cepa, y= `Pig total`))+
geom_boxplot(color="darkblue", fill="lightblue")+facet_wrap(~Sexo)
color  %>% ggplot(aes(x=Cepa, y= Entero))+
geom_boxplot(color="darkblue", fill="lightblue")+facet_wrap(~Sexo)
q <- ggplot(color, aes(x = Peso, y = `Pig total`, shape=Cepa, color=Cepa))
q + geom_point() + xlab("Peso") + geom_smooth(method=lm) + facet_wrap(~Sexo)
q <- ggplot(color, aes(x = Peso, y = Entero, shape=Cepa, color=Cepa))
q + geom_point() + xlab("Peso") + geom_smooth(method=lm) +facet_wrap(~Sexo)
View(color)
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(ggplot2)
library(dplyr)
library(tidyr)
library(lmtest)
library(knitr)
library(nlme)
library(lsmeans)
library(coefplot)
library(corrplot)
library(lme4)
library(ggpubr)
library(rstatix)
library(PerformanceAnalytics)
library(car)
library(gridExtra)
geom_histogram(col="darkblue", fill= "lightblue", position = "identity", bins = 10, alpha = 0.4 )+ labs(x="Porcentaje de lípidos", title = "Porcentaje de lípidos: LCY + AQG.")
p5 <- color %>%
ggplot(aes(x= `pje_lipidos` )) +
geom_histogram(col="darkblue", fill= "lightblue", position = "identity", bins = 10, alpha = 0.4 ) + labs(x="Porcentaje de lípidos", title = "Porcentaje de lípidos: LCY + AQG.")
p1 <- color %>%
ggplot(aes(x= `Pig total`)) +
geom_histogram(col="darkblue", fill= "lightblue", position = "identity", bins = 10, alpha = 0.4 )+ labs(x="Pigmentación total", title = "Pigmentación total LCY + AQG.")
p2 <- color %>%
ggplot(aes(x= Entero)) +
geom_histogram(col="darkblue", fill= "lightblue", position = "identity", bins = 10, alpha = 0.4 )+ labs(x="Color filete entero", title = "Color filete entero: LCY + AQG.")
p3 <- color  %>% ggplot(aes(x=Cepa, y= `Pig total`))+
geom_boxplot(color="darkblue", fill="lightblue")+facet_wrap(~Sexo)
p4 <- color  %>% ggplot(aes(x=Cepa, y= Entero))+
geom_boxplot(color="darkblue", fill="lightblue")+facet_wrap(~Sexo)
p5 <- color %>%
ggplot(aes(x= `pje_lipidos` )) +
geom_histogram(col="darkblue", fill= "lightblue", position = "identity", bins = 10, alpha = 0.4 ) + labs(x="Porcentaje de lípidos", title = "Porcentaje de lípidos: LCY + AQG.")
p6 <- color  %>% ggplot(aes(x=Cepa, y= `pje_lipidos`))+
geom_boxplot(color="darkblue", fill="lightblue")+facet_wrap(~Sexo)
grid.arrange(p1, p2, p3, p4, p5, p6, nrow = 2)
p5 <- color %>%
ggplot(aes(x= `pje_lipidos` )) +
geom_histogram(col="darkblue", fill= "lightblue", position = "identity", bins = 10, alpha = 0.4 ) + labs(x="Porcentaje de lípidos", title = "Porcentaje de lípidos: LCY + AQG.")
p6 <- color  %>% ggplot(aes(x=Cepa, y= `pje_lipidos`))+
geom_boxplot(color="darkblue", fill="lightblue")+facet_wrap(~Sexo)
grid.arrange(p5, p6, nrow = 2)
View(color)
par(mfrow = c(1, 1))
color_cor <- color[, c(18, 22:26)]
res <- cor(color_cor, use="complete.obs", method = c("spearman"))
round(res, 2)
chart.Correlation(color_cor, histogram=FALSE, pch=19, method = c("spearman"))
par(mfrow = c(1, 1))
color_cor <- color[, c(22:26, 18)]
res <- cor(color_cor, use="complete.obs", method = c("spearman"))
round(res, 2)
chart.Correlation(color_cor, histogram=FALSE, pch=19, method = c("spearman"))
q <- ggplot(color, aes(x = Peso, y = `pje_lipidos`, shape=Cepa, color=Cepa))
q + geom_point() + xlab("Peso") + geom_smooth(method=lm) +facet_wrap(~Muestreo)
color <- as.data.frame(color)
lm0 <-lm(`pje_lipidos` ~ Centro + Cepa + Sexo + Jaula + Muestreo + Peso, data=color)
anova(lm0)
knitr::opts_chunk$set(echo = FALSE)
library(readr)
library(graphics)
library(Rlab)
library(MASS)
mi_tabla <- table(levadura)
# Generar una muestra desde la población en estudio
set.seed(123)
# n = 326 cepas
# mu = 4.13 (mutaciones por cepa)
# theta = 30 (número arbitrario para estimar la varianza)
levadura <- rnegbin (326, 4.13, 30)
head(levadura, 20)
summary(levadura)
mi_tabla <- table(levadura)
barplot(mi_tabla,   # Datos
main = "Mutaciones espontáneas en levadura", # Título
xlab = "Número de mutaciones espontáneas en levadura.",# Etiqueta eje X
ylab = "Frecuencia",        # Etiqueta eje Y
border = "black",           # Color borde
col = c("darkgrey", "darkblue", "red"))
mi_tabla <- table(levadura)
barplot(mi_tabla,   # Datos
main = "Mutaciones espontáneas en levadura", # Título
xlab = "Número de mutaciones espontáneas en levadura.",# Etiqueta eje X
ylab = "Frecuencia",        # Etiqueta eje Y
border = "black",           # Color borde
col = c("darkblue"))
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(ggplot2)
library(dplyr)
library(knitr)
library(vegan)
#a) Importa datos
Yali <-read_excel("Yali_PCA.xlsx",sheet=1)
Yali$Station <- as.factor(Yali$Station )
head(Yali[,4:9]) %>% pander()
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(ggplot2)
library(dplyr)
library(knitr)
library(vegan)
library(pander)
#a) Importa datos
Yali <-read_excel("Yali_PCA.xlsx",sheet=1)
Yali$Station <- as.factor(Yali$Station )
head(Yali[,4:9]) %>% pander()
knitr::include_graphics("Salmon_PCA.png")
#a) Importa datos
Yali <-read_excel("Yali_PCA.xlsx",sheet=1)
Yali$Station <- as.factor(Yali$Station )
head(Yali[,4:10]) %>% pander(caption ="Organic and inorganic parameters measured in the water.")
#a) Importa datos
Tortugas <-read_excel("Dataset_permanova.xlsx",sheet=2)
Tortugas$Area<-as.factor(Tortugas$Area)
Tortugas$Plastic<-as.factor(Tortugas$Plastic)
head(Tortugas[,1:5])%>% pander(caption ="Ingesta de plástico y dieta.")
#a) Importa datos
Tortugas <-read_excel("Dataset_permanova.xlsx",sheet=2)
Tortugas$Area<-as.factor(Tortugas$Area)
Tortugas$Plastic<-as.factor(Tortugas$Plastic)
head(Tortugas[,1:6])%>% pander(caption ="Ingesta de plástico y dieta.")
#a) Importa datos
Tortugas <-read_excel("Dataset_permanova.xlsx",sheet=2)
Tortugas$Area<-as.factor(Tortugas$Area)
Tortugas$Plastic<-as.factor(Tortugas$Plastic)
head(Tortugas[,1:7])%>% pander(caption ="Ingesta de plástico y dieta.")
permanova <- adonis2(dist_euclidea ~ Area*Plastic , method = "bray", data=Tortugas, permutations=999)
# Crea nuevas variables
val_estandarizado <- Tortugas %>%
select(Chlorophyta, Rhdophyta, Phaeophyceae, Land, Animal) %>%
mutate(
Chlorophyta1 = (Chlorophyta - mean(Chlorophyta)) / sd(Chlorophyta),
Rhdophyta1 = (Rhdophyta - mean(Rhdophyta)) / sd(Rhdophyta),
Phaeophyceae1 = (Phaeophyceae - mean(Phaeophyceae)) / sd(Phaeophyceae),
Land1 = (Land - mean(Land)) / sd(Land),
Animal1 = (Animal - mean(Animal)) / sd(Animal))
dist_euclidea <- dist(val_estandarizado[6:10])
permanova <- adonis2(dist_euclidea ~ Area*Plastic , method = "bray", data=Tortugas, permutations=999)
permanova %>% pander()
# a) Importa datos
Yali <-read_excel("Yali_PCA.xlsx",sheet=1)
Yali$Station <- as.factor(Yali$Station )
head(Yali[,4:10]) %>% pander(caption ="Organic and inorganic parameters measured in the water.")
pairs.panels(Yali[2:7], method = "pearson")
# Paquetes
library(readxl)
library(ggplot2)
library(dplyr)
library(knitr)
library(psych) # Graficas de correlación
library(factoextra) # distancia euclideana
library(vegan) # 	Community Ecology Package: Ordination, Diversity and Dissimilarities
# a) Importa datos
Yali <-read_excel("Yali_PCA.xlsx",sheet=1)
Yali$Station <- as.factor(Yali$Station )
head(Yali[,4:10]) %>% pander(caption ="Organic and inorganic parameters measured in the water.")
pairs.panels(Yali[2:7], method = "pearson")
pairs.panels(Yali[8:13], method = "pearson")
pairs.panels(Yali[14:20], method = "pearson")
pairs.panels(Yali[5:10], method = "pearson")
pairs.panels(Yali[11:18], method = "pearson")
pairs.panels(Yali[5:12], method = "pearson")
pairs.panels(Yali[5:12], method = "pearson")
pairs.panels(Yali[13:18], method = "pearson")
pairs.panels(Yali[5:11], method = "pearson")
pairs.panels(Yali[12:18], method = "pearson")
View(Yali)
# realiza PCA
Yalipca <- prcomp(Yali[5:18], scale = TRUE)
str(Yali)
View(Yali)
Yali_mat <- as.matrix(Yali[,-c(1:4)])
View(Yali_mat)
View(Yali_mat)
View(Yali)
row.names(Yali_mat ) <- Yali$Station
View(Yali_mat)
pairs.panels(Yali[1:7], method = "pearson")
pairs.panels(Yali_mat[1:7], method = "pearson")
pairs.panels(Yali_mat[8:15], method = "pearson")
View(Yali_mat)
dim(Yali_mat)
pairs.panels(Yali_mat[1:7], method = "pearson")
pairs.panels(Yali_mat[8:14], method = "pearson")
pairs.panels(Yali_mat[,1:7], method = "pearson")
pairs.panels(Yali_mat[,1:7], method = "pearson")
# realiza PCA
Yalipca <- prcomp(Yali_mat, scale = TRUE)
View(Yali_mat)
Yali_mat <- as.matrix(as.numerix(Yali[,-c(1:4)]))
Yali_mat <- as.matrix(as.numeric(Yali[,-c(1:4)]))
# a) Importa datos
Yali <-read_excel("Yali_PCA.xlsx",sheet=1)
Yali$Station <- as.factor(Yali$Station )
head(Yali[,4:10]) %>% pander(caption ="Organic and inorganic parameters measured in the water.")
str(Yali)
Yali_mat <- matrix(as.numeric(Yali[,-c(1:4)]))
Yali_mat <- as.matrix(Yali[,-c(1:4)]))
Yali_mat <- as.matrix(Yali[,-c(1:4)])
row.names(Yali_mat ) <- Yali$Station
dim(Yali_mat)
str(Yali_mat)
Yali_mat <- as.numeric(Yali_mat)
# a) Importa datos
Yali <-read_excel("Yali_PCA.xlsx",sheet=1)
Yali$Station <- as.factor(Yali$Station )
head(Yali[,4:10]) %>% pander(caption ="Organic and inorganic parameters measured in the water.")
str(Yali)
Yali_mat <- as.matrix(Yali[,-c(1:4)])
row.names(Yali_mat) <- Yali$Station
dim(Yali_mat)
str(Yali_mat)
class(Yali_mat) <- numeric
View(Yali_mat)
class(Yali_mat) <- "numeric"
View(Yali_mat)
pairs.panels(Yali_mat[,1:7], method = "pearson")
pairs.panels(Yali_mat[,8:14], method = "pearson")
# realiza PCA
Yalipca <- prcomp(Yali_mat, scale = TRUE)
Yalipca
View(Yali_mat)
# a) Importa datos
Yali <-read_excel("Yali_PCA.xlsx",sheet=1)
Yali$Station <- as.factor(Yali$Station )
head(Yali[,4:10]) %>% pander(caption ="Organic and inorganic parameters measured in the water.")
str(Yali)
Yali_mat <- as.matrix(Yali[,-c(1:4)])
row.names(Yali_mat) <- Yali$Station
dim(Yali_mat)
str(Yali_mat)
class(Yali_mat) <- "numeric"
View(Yali_mat)
# a) Importa datos
Yali <-read_excel("Yali_PCA.xlsx",sheet=1)
Yali$Station <- as.factor(Yali$Station )
# a) Importa datos
Yali <-read_excel("Yali_PCA.xlsx",sheet=1)
setwd("~/Dropbox/CURSOS/VINCULACION/DiplomadoR_Biociencias_v1_2022/Clase_21")
# a) Importa datos
Yali <-read_excel("Yali_PCA.xlsx",sheet=1)
Yali$Station <- as.factor(Yali$Station )
head(Yali[,4:10]) %>% pander(caption ="Organic and inorganic parameters measured in the water.")
str(Yali)
Yali_mat <- as.matrix(Yali[,-c(1:4)])
row.names(Yali_mat) <- Yali$Station
dim(Yali_mat)
str(Yali_mat)
class(Yali_mat) <- "numeric"
pairs.panels(Yali_mat[,1:7], method = "pearson")
pairs.panels(Yali_mat[,8:14], method = "pearson")
# realiza PCA
Yalipca <- prcomp(Yali_mat, scale = TRUE)
Yalipca
# Varianza explicada
get_eigenvalue(Yalipca)
fviz_eig(Yalipca)
# Grafica por sitio
fviz_pca_ind(Yalipca, repel = TRUE) # evita que se solape el nombre de los sitios
View(Yali)
Yali <- Yali %>% filter(Season == "Summer")
Yali_mat <- as.matrix(Yali[,-c(1:4)])
row.names(Yali_mat) <- Yali$Station
dim(Yali_mat)
str(Yali_mat)
class(Yali_mat) <- "numeric"
pairs.panels(Yali_mat[,1:7], method = "pearson")
pairs.panels(Yali_mat[,8:14], method = "pearson")
# realiza PCA
Yalipca <- prcomp(Yali_mat, scale = TRUE)
Yalipca
# Varianza explicada
get_eigenvalue(Yalipca)
fviz_eig(Yalipca)
# Grafica por sitio
fviz_pca_ind(Yalipca, repel = TRUE) # evita que se solape el nombre de los sitios
fviz_pca_var(Yalipca)
fviz_pca_biplot(Yalipca, repel = TRUE)
View(Yali)
# Grafica por sitio
fviz_pca_ind(Yalipca,
repel = TRUE,
habillage = Yali$Location,
addEllipses = TRUE, pointsize = 3) # evita que se solape el nombre de los sitios
fviz_pca_var(Yalipca)
fviz_pca_biplot(Yalipca,
repel = TRUE,
habillage = Yali$Location,
addEllipses = TRUE,
pointsize = 3)
setwd("~/Dropbox/CURSOS/VINCULACION/DiplomadoR_Biociencias_v1_2022/Clase_22")
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(dplyr)
library(ggplot2)
library(knitr)
knitr::include_graphics("Posit.png")
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(dplyr)
library(ggplot2)
library(knitr)
knitr::include_graphics("Caligus.jpg")
knitr::include_graphics("Caligus.png")
