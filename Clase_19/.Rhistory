# Graficas avanzadas
myplot <-  ggplot(data = data, aes(x=Tratamiento, y=Biofilm, color=Tratamiento))+
geom_jitter(width = 0.10)+
labs(title="Biofilm con o sin plasma.", x="Tratamiento", y="FC") +
stat_summary(fun= median, geom="crossbar", width=0.5, color="black")
myplot
# Graficas avanzadas
myplot <-  ggplot(data = data, aes(x=Tratamiento, y=Biofilm, color=Tratamiento))+
geom_jitter(width = 0.10)+
labs(title="Biofilm con o sin plasma.", x="Tratamiento", y="Biofilm") +
stat_summary(fun= median, geom="crossbar", width=0.5, color="black")
myplot
# Agrega significancia al plot
myplot + stat_compare_means(method = "wilcox.test", label.y = 3.7, label.x = 1.2)
library(ggpubr) # estética y  estadística
# Agrega significancia al plot
myplot + stat_compare_means(method = "wilcox.test", label.y = 3.7, label.x = 1.2)
# Agrega significancia al plot
myplot + stat_compare_means(method = "wilcox.test", label.y = 11, label.x = 2)
# Agrega significancia al plot
myplot + stat_compare_means(method = "wilcox.test", label.y = 11, label.x = 1.5)
# Agrega significancia al plot
myplot + stat_compare_means(method = "wilcox.test", label.y = 12, label.x = 1.5)
# Agrega significancia al plot
myplot + stat_compare_means(method = "wilcox.test", label.y = 12.5, label.x = 1.5)
myplot + stat_compare_means(comparisons = list(c("normal","tumoral")), label = "p.signif")
myplot + stat_compare_means(comparisons = list(c("Con plasma","Sin plasma")), label = "p.signif")
# Crea objetos pre y post
data <- data.frame(Tratamiento = rep(c("pre", "post"), each = 4),
Gonadotrofina = c(45, 41, 47, 52,49, 50, 52, 50))
View(data)
# Realiza prueba de Wilcoxon
wilcox.test(Gonadotrofina ~ Tratamiento, data = data,
alternative = "two.sided",
paired = TRUE) %>% pander()
# Crea objetos pre y post
pre <- c(45, 41, 47, 52)
post <- c(49, 50, 52, 50)
# Realiza prueba de Wilcoxon
wilcox.test(post - pre, alternative = "greater")
# no es necesario indicar muestras pareadas
# pues estamos haciendo la resta en la función.
# Realiza prueba de Wilcoxon
wilcox.test(Gonadotrofina ~ Tratamiento, data = data,
alternative = "greater",
paired = TRUE) %>% pander()
myplot <-  ggplot(data, aes(x=Tratamientos, y=IDr, color=Tratamientos))+
geom_jitter(width = 0.10)+
labs(title="FC SLC6A14 normal v/s tumoral.", x="Tiempo", y="FC") +
stat_summary(fun= median, geom="crossbar", width=0.5, color="black")
myplot
# Simula datos
data <- data.frame(Tratamientos = rep(c("T0", "T1", "T2", "T3", "T4"), each = 9),
IDr = c(runif(9, 0.6,0.8),
runif(9, 0.1, 0.3),
runif(9, 0.2, 0.4),
runif(9, 0.35, 0.45),
runif(9, 0.05, 0.16)))
data$Tratamientos <- as.factor(data$Tratamientos)
myplot <-  ggplot(data, aes(x=Tratamientos, y=IDr, color=Tratamientos))+
geom_jitter(width = 0.10)+
labs(title="FC SLC6A14 normal v/s tumoral.", x="Tiempo", y="FC") +
stat_summary(fun= median, geom="crossbar", width=0.5, color="black")
myplot
myplot <-  ggplot(data, aes(x=Tratamientos, y=IDr, color=Tratamientos))+
geom_jitter(width = 0.10)+
labs(title="Indice de daño en nogal", x="Tratamiento", y="IDr (Indice de daño)") +
stat_summary(fun= median, geom="crossbar", width=0.5, color="black")
myplot
# Realiza prueba de kruskal
kruskal.test(IDr ~ Tratamientos, data=data) %>% pander()
# Realiza prueba de dunn
table <- dunnTest(IDr ~ Tratamientos,
data=data,
method="bonferroni")
table$res %>% pander(digits=2)
# Agrega significancia al plot
myplot + stat_compare_means(method = 'kruskal.test', label.y = 0.8, label.x = 5)
# Agrega significancia al plot
myplot + stat_compare_means(method = 'kruskal.test', label.y = 0.8, label.x = 3)
myplot + stat_compare_means(comparisons = list(c("T0", "T1"),c("T0", "T2"), c("T0", "T3"), c("T0", "T$")),
label = "p.signif")
myplot + stat_compare_means(comparisons = list(c("T0", "T1"),c("T0", "T2"), c("T0", "T3"), c("T0", "T4")),
label = "p.signif")
# Simula datos acción fúngica
data <- data.frame(Tratamientos = rep(c("T0", "T1", "T2", "T3", "T4"), each = 9), IDr = c(runif(9, 0.6,0.8),
runif(9, 0.1, 0.3),
runif(9, 0.2, 0.4),
runif(9, 0.35, 0.45),
runif(9, 0.05, 0.16)))
data$Tratamientos <- as.factor(data$Tratamientos)
# Realiza prueba de kruskal
kruskal.test(IDr ~ Tratamientos, data=data) %>% pander()
# Realiza prueba de dunn
table <- dunnTest(IDr ~ Tratamientos,
data=data,
method="bonferroni")
table$res %>% pander(digits=2)
# Simula datos acción fúngica
set.seed(1)
data <- data.frame(Tratamientos = rep(c("T0", "T1", "T2", "T3", "T4"), each = 9), IDr = c(runif(9, 0.6,0.8),
runif(9, 0.1, 0.3),
runif(9, 0.2, 0.4),
runif(9, 0.35, 0.45),
runif(9, 0.05, 0.16)))
data$Tratamientos <- as.factor(data$Tratamientos)
# Realiza prueba de kruskal
kruskal.test(IDr ~ Tratamientos, data=data) %>% pander()
# Realiza prueba de dunn
table <- dunnTest(IDr ~ Tratamientos,
data=data,
method="bonferroni")
table$res %>% pander(digits=2)
# Simula datos
set.seed(1)
data <- data.frame(Tratamientos = rep(c("T0", "T1", "T2", "T3", "T4"), each = 9),
IDr = c(runif(9, 0.6,0.8),
runif(9, 0.1, 0.3),
runif(9, 0.2, 0.4),
runif(9, 0.35, 0.45),
runif(9, 0.05, 0.16)))
data$Tratamientos <- as.factor(data$Tratamientos)
myplot <-  ggplot(data, aes(x=Tratamientos, y=IDr, color=Tratamientos))+
geom_jitter(width = 0.10)+
labs(title="Indice de daño en nogal", x="Tratamiento", y="IDr (Indice de daño)") +
stat_summary(fun= median, geom="crossbar", width=0.5, color="black")
myplot
# Realiza prueba de kruskal
kruskal.test(IDr ~ Tratamientos, data=data) %>% pander()
# Realiza prueba de dunn
table <- dunnTest(IDr ~ Tratamientos,
data=data,
method="bonferroni")
table$res %>% pander(digits=2)
# Agrega significancia al plot
myplot + stat_compare_means(method = 'kruskal.test', label.y = 0.8, label.x = 3)
myplot + stat_compare_means(comparisons = list(c("T0", "T1"),c("T0", "T2"), c("T0", "T3"), c("T0", "T4")),
label = "p.signif")
# Realiza prueba de dunn
table <- dunnTest(IDr ~ Tratamientos,
data=data,
method="bonferroni")
View(table)
table[["res"]]
# Agrega significancia al plot
myplot + stat_pvalue_manual(
table[["res"]], label = "p.adj")
# Realiza prueba de dunn
table <- dunnTest(IDr ~ Tratamientos,
data=data,
method="bonferroni")
table <- table$res %>% pander(digits=2)
# Agrega significancia al plot
myplot + stat_pvalue_manual(
table, label = "p.adj")
# Agrega significancia al plot
ggboxplot(data, x=Tratamientos, y=IDr) + stat_pvalue_manual(
table, label = "p.adj")
View(data)
data <- data.frame(Tratamientos = rep(c("T0", "T1", "T2", "T3", "T4"), each = 9),
IDr = c(runif(9, 0.6,0.8),
runif(9, 0.1, 0.3),
runif(9, 0.2, 0.4),
runif(9, 0.35, 0.45),
runif(9, 0.05, 0.16)))
data$Tratamientos <- as.factor(data$Tratamientos)
# Agrega significancia al plot
ggboxplot(data, x=Tratamientos, y=IDr) + stat_pvalue_manual(
table, label = "p.adj")
nogal <- data.frame(Tratamientos = rep(c("T0", "T1", "T2", "T3", "T4"), each = 9),
IDr = c(runif(9, 0.6,0.8),
runif(9, 0.1, 0.3),
runif(9, 0.2, 0.4),
runif(9, 0.35, 0.45),
runif(9, 0.05, 0.16)))
View(nogal)
nogal$Tratamientos <- as.factor(nogal$Tratamientos)
myplot <-  ggplot(nogal, aes(x=Tratamientos, y=IDr, color=Tratamientos))+
geom_jitter(width = 0.10)+
labs(title="Indice de daño en nogal", x="Tratamiento", y="IDr (Indice de daño)") +
stat_summary(fun= median, geom="crossbar", width=0.5, color="black")
myplot
# Realiza prueba de kruskal
kruskal.test(IDr ~ Tratamientos, data=nogal) %>% pander()
# Realiza prueba de dunn
table <- dunnTest(IDr ~ Tratamientos,
data=nogal,
method="bonferroni")
table <- table$res %>% pander(digits=2)
# Agrega significancia al plot
ggboxplot(nogal, x=Tratamientos, y=IDr) + stat_pvalue_manual(
table, label = "p.adj")
ggboxplot(nogal, x=Tratamientos, y=IDr)
data("ToothGrowth")
df <- ToothGrowth
# Basic plot
# +++++++++++++++++++++++++++
# width: change box plots width
ggboxplot(df, x = "dose", y = "len", width = 0.8)
View(nogal)
View(ToothGrowth)
data("ToothGrowth")
df <- ToothGrowth
# Basic plot
# +++++++++++++++++++++++++++
# width: change box plots width
ggboxplot(df, x = "supp", y = "len", width = 0.8)
nogal <- data.frame(Tratamientos = rep(c("T0", "T1", "T2", "T3", "T4"), each = 9),
IDr = c(runif(9, 0.6,0.8),
runif(9, 0.1, 0.3),
runif(9, 0.2, 0.4),
runif(9, 0.35, 0.45),
runif(9, 0.05, 0.16)))
# Agrega significancia al plot
ggboxplot(nogal, x=Tratamientos, y=IDr) + stat_pvalue_manual(
table, label = "p.adj")
summary(nogal)
nogal$Tratamientos <- as.factor(nogal$Tratamientos)
summary(nogal)
ggboxplot(nogal, Tratamientos, IDr)
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr") + stat_pvalue_manual(
table, label = "p.adj")
table <- table %>% add_xy_position(x = "group")
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr") + stat_pvalue_manual(
table, label = "p.adj")
# Realiza prueba de dunn
table <- dunnTest(IDr ~ Tratamientos,
data=nogal,
method="bonferroni")
table <- table$res %>% pander(digits=2)
table <- table %>% add_xy_position(x = "Tratamientos")
table <- table %>% add_y_position()
library(ggpubr) # estética y  estadística
table <- table %>% add_y_position()
# Realiza prueba de dunn
table <- dunnTest(IDr ~ Tratamientos,
data=nogal,
method="bonferroni")
table <- table$res %>% pander(digits=2)
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr") + stat_pvalue_manual(
table, label = "P.adj")
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr") + stat_pvalue_manual(table, label = "P.adj")
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr") + stat_pvalue_manual(table, x = "Tratamientos", y.position = 0.3, label = "P.adj")
table <- table$res %>% pander(digits=2)
# Realiza prueba de dunn
table <- dunnTest(IDr ~ Tratamientos,
data=nogal,
method="bonferroni")
table <- table$res %>% pander(digits=2)
# Realiza prueba de dunn
table <- dunnTest(IDr ~ Tratamientos,
data=nogal,
method="bonferroni")
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr") + stat_pvalue_manual(table, x = "Tratamientos", y.position = 0.3, label = "P.adj")
View(table)
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr") + stat_pvalue_manual(table$res, x = "Tratamientos", y.position = 0.3, label = "P.adj")
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr") +
stat_pvalue_manual(table$res)
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr") +
stat_pvalue_manual(table$res, label = "P.adj")
View(table)
table[["res"]]
table<- table[["res"]]
class(table)
summary(table)
table$Comparison <- as.factor(table$Comparison)
table$Comparison <- as.factor(table$Comparison)
summary(table)
class()# Agrega significancia al plot
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr") +
stat_pvalue_manual(table, label = "P.adj")
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr") +
stat_pvalue_manual(table$Comparison, label = "P.adj")
nogal %>% dunn_test(IDr ~ Tratamientos, p.adjust.method = "hochberg")
library(rstatix)
nogal %>% dunn_test(IDr ~ Tratamientos, p.adjust.method = "hochberg")
# Realiza prueba de dunn FSA
dann.test <- nogal %>% dunn_test(IDr ~ Tratamientos, p.adjust.method = "hochberg")
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr") +
stat_pvalue_manual(dann.test, label = "P.adj")
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr") +
stat_pvalue_manual(dann.test, label = "p.adj")
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr") +
stat_pvalue_manual(dann.test, y.position = 0.8, label = "p.adj")
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr", fill = "Tratamientos") +
stat_pvalue_manual(dann.test, y.position = 0.8, label = "p.signif")
View(dann.test)
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr", fill = "Tratamientos") +
stat_pvalue_manual(dann.test, y.position = 0.8, label = "p.adj.signif")
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr", fill = "Tratamientos") +
stat_pvalue_manual(dann.test, y.position = c(0.8,0.75,0.7,0.65,0.6,0.55,0.5), label = "p.adj.signif")
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr", fill = "Tratamientos") +
stat_pvalue_manual(dann.test, y.position = c(0.8,0.75,0.7,0.65,0.6,0.55,0.5,0.5,0.5,0.5), label = "p.adj.signif")
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr", fill = "Tratamientos") +
stat_pvalue_manual(dann.test, y.position = c(0.9,0.75,0.7,0.65,0.6,0.55,0.5,0.5,0.5,0.5), label = "p.adj.signif")
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr", fill = "Tratamientos") +
stat_pvalue_manual(dann.test, y.position = c(0.9,0.85,0.7,0.65,0.6,0.55,0.5,0.5,0.5,0.5), label = "p.adj.signif")
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr", fill = "Tratamientos") +
stat_pvalue_manual(dann.test, y.position = c(0.95,0.9,0.85,0.65,0.6,0.55,0.5,0.5,0.5,0.5), label = "p.adj.signif")
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr", fill = "Tratamientos") +
stat_pvalue_manual(dann.test, y.position = c(0.95,0.9,0.85,0.80,0.6,0.55,0.5,0.5,0.5,0.5), label = "p.adj.signif")
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr", fill = "Tratamientos") +
stat_pvalue_manual(dann.test, y.position = c(0.96,0.9,0.85,0.80,0.6,0.55,0.5,0.5,0.5,0.5), label = "p.adj.signif")
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr", fill = "Tratamientos") +
stat_pvalue_manual(dann.test, y.position = c(0.96,0.9,0.85,0.80,0.6,0.55,0.5,0.5,0.5,0.5),
label = "p.adj.signif", hide.ns = TRUE)
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr", fill = "Tratamientos") +
stat_pvalue_manual(dann.test, y.position = c(0.96,0.9,0.85,0.6,0.55,0.5,0.5),
label = "p.adj.signif", hide.ns = TRUE)
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr", fill = "Tratamientos") +
stat_pvalue_manual(dann.test, y.position = c(0.96,0.9,0.85,0.6,0.55,0.5),
label = "p.adj.signif", hide.ns = TRUE)
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr", fill = "Tratamientos") +
stat_pvalue_manual(dann.test, y.position = c(0.96,0.9,0.85,0.6,1.55,0.5),
label = "p.adj.signif", hide.ns = TRUE)
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr", fill = "Tratamientos") +
stat_pvalue_manual(dann.test, y.position = c(0.96,0.9,0.85,0.61,0.55,0.5),
label = "p.adj.signif", hide.ns = TRUE)
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr", fill = "Tratamientos") +
stat_pvalue_manual(dann.test, y.position = c(0.96,0.9,0.85,0.62,0.55,0.5),
label = "p.adj.signif", hide.ns = TRUE)
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr", fill = "Tratamientos") +
stat_pvalue_manual(dann.test, y.position = c(0.96,0.9,0.84,0.62,0.55,0.5),
label = "p.adj.signif", hide.ns = TRUE)
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr", fill = "Tratamientos", show.legend = FALSE) +
stat_pvalue_manual(dann.test, y.position = c(0.96,0.9,0.84,0.62,0.55,0.5),
label = "p.adj.signif", hide.ns = TRUE)
# Simula datos
set.seed(1)
nogal <- data.frame(Tratamientos = rep(c("T0", "T1", "T2", "T3", "T4"), each = 9),
IDr = c(runif(9, 0.6,0.8),
runif(9, 0.1, 0.3),
runif(9, 0.2, 0.4),
runif(9, 0.35, 0.45),
runif(9, 0.05, 0.16)))
nogal$Tratamientos <- as.factor(nogal$Tratamientos)
myplot <-  ggplot(nogal, aes(x=Tratamientos, y=IDr, color=Tratamientos))+
geom_jitter(width = 0.10)+
labs(title="Indice de daño en nogal", x="Tratamiento", y="IDr (Indice de daño)") +
stat_summary(fun= median, geom="crossbar", width=0.5, color="black")
library(ggplot2)
library(tidyr)
library(dplyr)
library(FSA) #perform Dunn's Test with Bonferroni correction for p-values
library(rstatix) #perform Dunn's Test with Bonferroni correction for p-values permite agregar significancia a plot
library(pander) # da formato a tablas estadísticas
library(ggpubr) # est
# Remover objetos de la sesi?n de trabajo
rm(list = ls())
# Paquetes
library(ggplot2)
library(tidyr)
library(dplyr)
library(FSA) #perform Dunn's Test with Bonferroni correction for p-values
library(rstatix) #perform Dunn's Test with Bonferroni correction for p-values permite agregar significancia a plot
library(pander) # da formato a tablas estadísticas
library(ggpubr) # estética y  estadística
# http://www.sthda.com/englis
# Simula datos
set.seed(1)
nogal <- data.frame(Tratamientos = rep(c("T0", "T1", "T2", "T3", "T4"), each = 9),
IDr = c(runif(9, 0.6,0.8),
runif(9, 0.1, 0.3),
runif(9, 0.2, 0.4),
runif(9, 0.35, 0.45),
runif(9, 0.05, 0.16)))
nogal$Tratamientos <- as.factor(nogal$Tratamientos)
myplot <-  ggplot(nogal, aes(x=Tratamientos, y=IDr, color=Tratamientos))+
geom_jitter(width = 0.10)+
labs(title="Indice de daño en nogal", x="Tratamiento", y="IDr (Indice de daño)") +
stat_summary(fun= median, geom="crossbar", width=0.5, color="black")
myplot
# Realiza prueba de kruskal
kruskal.test(IDr ~ Tratamientos, data=nogal) %>% pander()
# Realiza prueba de dunn FSA
table <- dunnTest(IDr ~ Tratamientos,
data=nogal,
method="bonferroni")
# Realiza prueba de dunn FSA
dann.test <- nogal %>% dunn_test(IDr ~ Tratamientos, p.adjust.method = "hochberg")
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr", fill = "Tratamientos") +
stat_pvalue_manual(dann.test, y.position = c(0.96,0.9,0.84,0.62,0.55,0.5),
label = "p.adj.signif", hide.ns = TRUE)
View(dann.test)
# Agrega significancia al plot
ggboxplot(nogal, x="Tratamientos", y="IDr", fill = "Tratamientos") +
stat_pvalue_manual(dann.test, y.position = c(0.96,0.9,0.84,0.62,0.55),
label = "p.adj.signif", hide.ns = TRUE)
View(table)
table[["res"]]
table[["res"]] %>% kable(digits=2)
table[["res"]] %>% pander(digits=2)
View(dann.test)
# Realiza prueba de dunn FSA
dann.test <- nogal %>% dunn_test(IDr ~ Tratamientos, p.adjust.method = "bonferroni")
View(dann.test)
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(readxl)
library(ggplot2)
library(FSA)
enfermedad=factor(c(rep(0,150),rep(1,20),rep(0,40),rep(1,10)),
labels=c("Susceptible","resistente"))
genotipo=factor(c(rep("AA/Aa",170),rep("aa",50)),
levels=c("AA/Aa","aa"))
tab <- table(genotipo,resistencia)
resistencia=factor(c(rep(0,150),rep(1,20),rep(0,40),rep(1,10)),
labels=c("Susceptible","resistente"))
genotipo=factor(c(rep("AA/Aa",170),rep("aa",50)),
levels=c("AA/Aa","aa"))
tab <- table(genotipo,resistencia)
tab
resistencia=factor(c(rep(0,150),rep(1,20),rep(0,40),rep(1,10)),
labels=c("resistente","susceptible"))
genotipo=factor(c(rep("AA/Aa",170),rep("aa",50)),
levels=c("AA/Aa","aa"))
tab <- table(genotipo,resistencia)
tab
# H0 : El genotipo de los árboltes y la resistencia a la enfermedad son independientes.
# H1 : El genotipo de los árboles y la resistencia a la enfermedad NO son independientes.
# Crea un vector con los datos
datos <- c(150, 40, 20, 10)
# Transforma el vector de datos a una matriz
dim(datos) <- c(2,2)
datos
class(datos)
# Test de Chi-squared en R (chisq.test)
chisq.test(datos)
# Crea un vector con los datos
datos <- c(150, 40, 20, 10)
# Transforma el vector de datos a una matriz
dim(datos) <- c(2,2)
rownames(datos) <- c("AA/Aa","aa")
colnames(datos) <- c("resistente","susceptible")
class(datos)
# Crea un vector con los datos
datos <- c(150, 40, 20, 10)
# Transforma el vector de datos a una matriz
dim(datos) <- c(2,2)
rownames(datos) <- c("AA/Aa","aa")
colnames(datos) <- c("resistente","susceptible")
datos
class(datos)
# Test de Chi-squared en R (chisq.test)
chisq.test(datos)
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(ggplot2)
library(dplyr)
library(knitr)
library(kableExtra)
bioenv <- read_excel("bioenv.xlsx", sheet = 1)
tabla <- bioenv %>% select(a,b,c,d,e,Depth,Pollution,Temperature)
kable(head(tabla), caption = "Biodiversidad marina ambiental.")
knitr::include_graphics("metodos.png")
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(ggplot2)
library(dplyr)
library(knitr)
library(psych) # Graficas de correlación
library(factoextra) # Visualiza PCA
library(vegan) # Elabora PERMANOVA
knitr::include_graphics("4esquinas.png")
knitr::include_graphics("4esquinas.png")
knitr::include_graphics("4esquinas.png")
knitr::include_graphics("Upgma_gut_microbiota.png")
knitr::include_graphics("Cluster_clasificacion.png")
knitr::include_graphics("Kmeans.png")
knitr::include_graphics("Abundancia.png")
knitr::include_graphics("Jacard.png")
knitr::include_graphics("Jacard_ejemplo.png")
knitr::include_graphics("Jacard_matriz.png")
knitr::include_graphics("Paso1.png")
knitr::include_graphics("Paso2.png")
knitr::include_graphics("Paso2.1.png")
knitr::include_graphics("Paso2.2.png")
knitr::include_graphics("Dendograma.png")
knitr::include_graphics("upgma_maqui_1.png")
knitr::include_graphics("upgma_maqui_1.png")
